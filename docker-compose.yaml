version: '3'

services:
  db:
    image: postgres
    environment:
      - POSTGRES_PASSWORD=123456
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - ./pgdata:/var/lib/postgresql/data
  api:
    build:
      context: .
    tty: true
    ports:
     - "8000:8000"
    depends_on:
      db:
        condition: service_healthy

    command: >
      sh -c "python3 manage.py makemigrations && python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
  redis:
    image: redis
    ports:
        - "0001:6379"

  celery:
    image: latest
    restart: always
    environment:
      DEBUG: "True"
      CELERY_BROKER_URL: "redis://redis:6379/0"
      CELERY_RESULT_BACKEND: "redis://redis:6379/0"
    build:
      context: .
    command:  >
      sh -c "python3 -m celery -A config worker -l INFO"

    depends_on:
      - redis
      - api
volumes:
  db:
    driver: local

#########################################
#version: '3'
#
#services:
#  app:
#    build:
#      context: .
#    ports:
#      - "8000:8000"
#    volumes:
#      - ./app:/app
#    command: >
#      sh -c "python3 manage.py migrate &&
#             python3 manage.py runserver 0.0.0.0:8000"
#
#    environment:
#      - DB_HOST=5432
#      - DB_NAME=postgres
#      - DB_USER=postgres
#      - DB_PASS=123456
#    depends_on:
#      - db
#
#  db:
#    image: postgres:10-alpine
#    environment:
#      - POSTGRES_DB=app
#      - POSTGRES_USER=postgres
#      - POSTGRES_PASSWORD=123456
#    ports:
#      - "5432:5432"
##########################################
#version: '3'
#
#services:
##    nginx:
##        restart: always
##        image: nginx:1.23-alpine
##        ports:
##            - 80:80
##        volumes:
##            - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
##            - static_volume:/app/backend/django_static
#    server:
#        restart: unless-stopped
#        build:
#            context: .
##            dockerfile: ./docker/backend/Dockerfile
##        entrypoint: /app/docker/backend/server-entrypoint.sh
#        volumes:
#            - static_volume:/app/backend/django_static
#        expose:
#            - 8000
#        environment:
#            DEBUG: "True"
#            CELERY_BROKER_URL: "redis://redis:6379/0"
#            CELERY_RESULT_BACKEND: "redis://redis:6379/0"
#            DJANGO_DB: postgresql
#            POSTGRES_HOST: 127.0.0.1
#            POSTGRES_NAME: postgres
#            POSTGRES_USER: postgres
#            POSTGRES_PASSWORD: 123456
#            POSTGRES_PORT: 5432
#    worker:
#        restart: unless-stopped
#        build:
#            context: .
##            dockerfile: ./docker/backend/Dockerfile
##        entrypoint: /app/docker/backend/worker-entrypoint.sh
#        volumes:
#            - static_volume:/app/backend/django_static
#        environment:
#            DEBUG: "True"
#            CELERY_BROKER_URL: "redis://redis:6379/0"
#            CELERY_RESULT_BACKEND: "redis://redis:6379/0"
#            DJANGO_DB: postgresql
#            POSTGRES_HOST: db
#            POSTGRES_NAME: postgres
#            POSTGRES_USER: postgres
#            POSTGRES_PASSWORD: 123456
#            POSTGRES_PORT: 5432
#        depends_on:
#            - server
#            - redis
#    redis:
#        restart: unless-stopped
#        image: redis:7.0.5-alpine
#        expose:
#            - 6379
#    db:
#        image: postgres:13.0-alpine
#        restart: unless-stopped
#        volumes:
#            - postgres_data:/var/lib/postgresql/data/
#        environment:
#            POSTGRES_DB: postgres
#            POSTGRES_USER: postgres
#            POSTGRES_PASSWORD: postgres
#        expose:
#            - 5432
#
#volumes:
#    static_volume: {}
#    postgres_data: {}